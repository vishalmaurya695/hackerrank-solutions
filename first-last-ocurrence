//finding first and last occurence of an element in a sorted array using binary search

#include<iostream>
using namespace std;


int firstocur(int arr[], int size, int key){
  int start = 0;
  int end = size-1;
  int mid =start +(end-start)/2;
  int ans = -1;

  while(start <= end){

    if (arr[mid] == key){
        ans=mid;
        end=mid-1;

    }

    else if(arr[mid] > key){
      end=mid-1;

    }

    else if (arr[mid] < key){
      start=mid+1;
      
    }
    mid=start+(end-start)/2;
  }
return ans;
}


int lastocur(int arr[],int size,int key){
  int start = 0;
  int end = size-1;
  int mid = start + (end-start)/2;
  int ans=-1;

  while(start <= end){
    if(arr[mid] == key){
      ans =mid;
      start=mid+1;
    }

    else if(arr[mid] > key){

      start = mid+1;
    }

    else{
      end=mid-1;

    }
    mid=start + (end-start)/2;
  }

  return ans;

}


int main(){
  int size=7;
  int arr[7]={2,3,5,5,5,5,5};
  int key=5;

  cout<<"first ocurrence is at index : "<<firstocur(arr,size,key)<<endl;
  cout<<"last ocurrence is at index : "<<lastocur(arr,size,key)<<endl;
}
